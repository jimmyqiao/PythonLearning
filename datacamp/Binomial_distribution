def ecdf(data):
    """Compute ECDF for a one-dimensional array of measurements."""
    # Number of data points: n
    n = len(data)

    # x-data for the ECDF: x
    x = np.sort(data)

    # y-data for the ECDF: y
    y = np.arange(1, n+1) / n

    return x, y

###################################################################
# Take 10,000 samples out of the binomial distribution: n_defaults#
n_defaults = np.random.binomial(100,0.05,10000)

# Compute CDF: x, y
x,y = ecdf(n_defaults)

# Plot the CDF with axis labels
_ = plt.plot(x,y,marker = '.', linestyle='none')

_ = plt.xlabel('number of defaults out of 100 loans')
_ = plt.ylabel('CDF')

# Show the plot
plt.show()

###################################################################
# Compute bin edges: bins
bins = np.arange(0, max(n_defaults) + 1.5) - 0.5
print(max(n_defaults))
# Generate histogram
plt.hist(n_defaults,bins=bins,normed=True)

# Label axes
plt.xlabel('number of defaults out of 100 loans')
plt.ylabel('PMF')


# Show the plot
plt.show()
